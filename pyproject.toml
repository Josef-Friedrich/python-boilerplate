[tool.poetry]
name = "python_boilerplate"
version = "0.1.0"
description = "A collection of boilerplate files and templates for my Python projects."
authors = ["Josef Friedrich <josef@friedrich.rocks>"]
readme = "README.rst"
repository = "https://github.com/Josef-Friedrich/python-project-boilerplate"
# https://spdx.org/licenses/
license = "MIT" # GPL-3.0-only LGPL-2.1-only
# https://pypi.org/classifiers/
classifiers = [
    "Private :: Do not Upload", # HTTP Error 400: Invalid value for classifiers. Error: Classifier 'Private :: Do not Upload' is not a valid classifier.
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3",
    "Topic :: Utilities",
    "Typing :: Stubs Only",
    "License :: OSI Approved :: MIT License", # "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)"
]

[tool.poetry.dependencies]
python = "^3.9"
fire = "^0.5.0"
click = "^8.1.7"

[tool.poetry.group.dev.dependencies]
beautifulsoup4 = "^4.11.1"
poetry = "^1.7.1"
Sphinx = "^7"
sphinx-rtd-theme = "^2"
pytest = "^8"
mypy = "^1"
autopep8 = "^1.6.0"
readme-patcher = "^0"
# readme-patcher = { path = "../readme_patcher", develop = true }
tox = "^4"
ruff = "^0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"
pattern = "(?P<base>\\d+\\.\\d+\\.\\d+)"

[tool.poetry.scripts]
"python-project-boilerplate.py" = "python_boilerplate:print_version"
"cli-with-fire.py" = "python_boilerplate.cli_with_fire:main"
"cli-with-click_simple.py" = "python_boilerplate.cli_with_click.simple:main"
"cli-with-click_multi-command-chaining.py" = "python_boilerplate.cli_with_click.multi_command_chaining:cli"

[tool.pyright]
reportPrivateImportUsage = "none"
reportUnusedExpression = "information"
reportUnusedImport = "information"
reportImportCycles = "information"
reportPrivateUsage = false
reportInvalidStringEscapeSequence = false

[tool.ruff.format]
docstring-code-format = true
